############
# Upstream #
############
upstream upstream_localhost {
  # > A: For cookie hash base
  # hash $uid_got$uid_set consistent;

  server 127.0.0.1:8080;
}

########
# HTTP #
########
server {
  listen 80;

  server_name localhost;

  include /usr/local/openresty/nginx/defaults/server_include_defaults.conf;

  ###############################
  # /.well-known/acme-challenge #
  ###############################
  include /usr/local/openresty/nginx/defaults/server_acme.conf;

  location / {
    return 301 https://$host$request_uri;
  }
}

#########
# HTTPS #
#########
server {
  listen 443 ssl http2;

  server_name localhost;

  set $organization_title 'Sample Organization';
  # select file name without extension in https://aasaam.github.io/brand-icons/ for example ir_aasaam.svg must be ir_aasaam
  set $organization_brand_icon 'si_linux';

  ########################
  # Modern browser check #
  ########################
  # > A: Only latest version of Firefox and Chrome is acceptable as modern browsers
  # set $agent_check_is_modern '1';
  # > B: or also accept the crawlers
  # set $agent_is_modern_or_crawler '1';

  ############################
  # Auth Request: Protection #
  ############################
  # set $protection_enable '1';
  # set $protection_config_supported_languages 'en,fa';
  # set $protection_config_i18n_organization_title '{"fa": "عنوان"}';
  # > If TOTP:
  # set $protection_config_challenge 'totp';
  # set $protection_config_totp_secret 'XXXXXXXXXXXXXXXX';

  # > If JS:
  # set $protection_config_challenge 'js';

  # > If Captcha:
  # set $protection_config_challenge 'captcha';
  # set $protection_config_captcha_difficulty 'medium'; # easy or medium or hard

  # > If LDAP:
  # set $protection_config_ldap_url 'ldap://192.168.88.99';
  # set $protection_config_ldap_readonly_username 'readonlyUserName';
  # set $protection_config_ldap_readonly_password 'readonlyPassw0rd';
  # set $protection_config_ldap_base_dn 'dc=sampleName,dc=com';
  # set $protection_config_ldap_filter '(uid=__USERNAME__)';
  # set $protection_config_ldap_attributes '["dn"]';

  # > Protection Directive
  # set $protection_config_unauthorized_status 488; # or 401 default
  # include /usr/local/openresty/nginx/addon/protection/rule.profile.conf;
  # include /usr/local/openresty/nginx/defaults/server_protection.conf;

  # > 401: standard nginx auth request
  # error_page 401 = @error401;
  # > choose one: redirect or js redirect
  # include /usr/local/openresty/nginx/defaults/server_protection_401_js.conf;
  # include /usr/local/openresty/nginx/defaults/server_protection_401_redirect.conf;

  # > 488: Recommended custom aasaam status for protection
  # error_page 488 = @error488;
  # > choose one: redirect or js redirect
  # include /usr/local/openresty/nginx/defaults/server_protection_488_js.conf;
  # include /usr/local/openresty/nginx/defaults/server_protection_488_redirect.conf;


  ############
  # Defaults #
  ############
  # > essential server defaults
  include /usr/local/openresty/nginx/defaults/server_include_defaults.conf;

  # > or with custom access lua you will need
  # include /usr/local/openresty/nginx/defaults/server_include_defaults_no_lua.conf;
  # access_by_lua {
  #   -- essential access check
  #   require "access_normal"
  # }

  #########
  # naxsi #
  #########
  # > for apply waf
  include /usr/local/openresty/nginx/defaults/server_naxsi_apply.conf;
  # > for testing using cookie setup
  # include /usr/local/openresty/nginx/defaults/server_naxsi_debug.conf;
  # > for learning
  # include /usr/local/openresty/nginx/defaults/server_naxsi_learning.conf;
  # > extra rules

  #######
  # SSL #
  #######
  include /usr/local/openresty/nginx/defaults/server_http2_default.conf;

  ssl_certificate /usr/local/openresty/nginx/defaults/selfsigned/cert.pem;
  ssl_certificate_key /usr/local/openresty/nginx/defaults/selfsigned/cert-key.pem;
  ssl_stapling off;
  ssl_stapling_verify off;

  # > comment out if you sure want to serve always https
  # add_header Strict-Transport-Security "max-age=63072000" always;

  #############
  # PageSpeed #
  #############

  # > A: disable
  # pagespeed off;

  # > B: enable via
  # pagespeed on;
  # pagespeed Domain $http_host;
  # > B1:
  # include /usr/local/openresty/nginx/defaults/page_speed_profile_1.conf;
  # > B2:
  # include /usr/local/openresty/nginx/defaults/page_speed_profile_2.conf;

  #########
  # Proxy #
  #########
  location / {
    # > pass headers to proxy backend
    include /usr/local/openresty/nginx/defaults/location_proxy_headers.conf;

    # > without page speed
    # include /usr/local/openresty/nginx/defaults/location_naxsi.conf;
    # > with page speed
    # include /usr/local/openresty/nginx/defaults/location_naxsi_page_speed.conf;
    # > extra rules
    # include /usr/local/openresty/nginx/addon/naxi/rules_000.conf;

    #########
    # Cache #
    #########
    # proxy_buffering on;
    # proxy_cache PROXYCACHE;
    # proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
    # proxy_cache_background_update on;
    # proxy_cache_bypass $http_cookie_admin;
    # proxy_cache_valid 200 302 10m;
    # proxy_cache_valid 404 1m;
    # add_header 'X-Aasaam-Cache-Status' $upstream_cache_status;

    # > upload size
    # client_max_body_size 10M;
    # client_body_buffer_size 10M;

    # > A: proxy http (LAN or trusted network)
    include /usr/local/openresty/nginx/defaults/location_proxy_http.conf;
    proxy_pass http://upstream_localhost;

    # > B: proxy https insecure [Bad practice]
    # include /usr/local/openresty/nginx/defaults/location_proxy_https_insecure.conf;
    # proxy_pass https://upstream_localhost;

    # > C: proxy https secure (WAN or untrusted network)
    # include /usr/local/openresty/nginx/defaults/location_proxy_https_secure.conf;
    # proxy_ssl_certificate /usr/local/openresty/nginx/addon/ssl/client.pem;
    # proxy_ssl_certificate_key /usr/local/openresty/nginx/addon/ssl/client.key;
    # proxy_ssl_trusted_certificate /etc/nginx/trusted_ca_cert.crt;
    # proxy_pass https://upstream_localhost;
  }
}
